{"version":3,"sources":["components/Cell.tsx","components/Board.tsx","components/PlayGround.tsx","App.tsx","index.tsx"],"names":["Cell","props","player","onClick","className","id","Board","useState","Array","fill","cellsState","setCellsState","clickState","setClickState","createCell","whichCell","cells","slice","xPlayer","calculateWinner","console","log","handlePlayer","rows","cols","board","counter","currentRow","columns","currentCol","push","createBoard","PlayGround","to","squares","lines","i","length","a","b","c","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59389da5.chunk.js","sourcesContent":["\r\n\r\nfunction Cell(props:any) {\r\n    const {player,onClick} = props;\r\n    \r\n    const decidePlayer =()=>{\r\n       return player==='X'? true:false;\r\n    }\r\n    return (\r\n        <div>            \r\n            <button className=\"square\" onClick={onClick} id={decidePlayer()? 'square-xplayer':'square-oplayer'}> {player} </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cell\r\n\r\n","import React, { useState } from \"react\"\r\nimport Cell from \"./Cell\"\r\nimport './Board.css';\r\n\r\n\r\n/*\r\n*   0 | 1 | 2\r\n*  ---+---+---\r\n*   3 | 4 | 5\r\n*  ---+---+---\r\n*   6 | 7 | 8\r\n*/\r\n\r\nfunction Board(props: any) {\r\n\r\n    const CELLNUMBER: number = 9;\r\n    const [cellsState, setCellsState] = useState(Array(CELLNUMBER).fill(''));\r\n    const [clickState, setClickState] = useState(true);\r\n\r\n    const handlePlayer = (whichCell: number) => {\r\n        const cells = cellsState.slice();\r\n        const xPlayer = clickState;\r\n        if (props.calculateWinner(cells) || cells[whichCell]) {\r\n            console.log(props.calculateWinner(cells));\r\n            return;\r\n        }\r\n        cells[whichCell] = xPlayer ? 'X' : 'O';\r\n        setCellsState(cells);\r\n        setClickState(!clickState);\r\n    }\r\n\r\n    const createCell = (whichCell: number) => {\r\n        return (\r\n            <Cell player={cellsState[whichCell]} onClick={() => { handlePlayer(whichCell) }} />\r\n        )\r\n    }\r\n    const createBoard = (rows: number, cols: number) => {\r\n        const board = [];\r\n        let counter = 0;\r\n        for (let currentRow = 0; currentRow < rows; currentRow++) {\r\n            let columns = [];\r\n            for (let currentCol = 0; currentCol < cols; currentCol++) {\r\n                columns.push(createCell(counter));\r\n                counter++;\r\n            }\r\n            board.push(<div key={currentRow} className=\"board-row\">{columns}</div>);\r\n        }\r\n        return board;\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>TIC TAC TðŸŽ…E!</h1>\r\n\r\n            <div className=\"players\">\r\n                <button id=\"x-player\">X</button>\r\n                <button id=\"o-player\">O</button>\r\n            </div>\r\n\r\n            <div className=\"board\">{createBoard(3, 3)}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board\r\n","import React from \"react\";\r\nimport Board from \"./Board\";\r\nimport \"./PlayGround.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PlayGround = () => {\r\n  const calculateWinner = (squares: Array<9>) => {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (\r\n        squares[a] &&\r\n        squares[a] === squares[b] &&\r\n        squares[a] === squares[c]\r\n      ) {\r\n        console.log(squares[a]);\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"nav\">\r\n        <div className=\"nav-container\">\r\n          <ul className=\"nav-menu\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/home\" className=\"nav-links\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/3x3\" className=\"nav-links\">\r\n                3x3\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/4x4\" className=\"nav-links\">\r\n                4x4\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n      <div>\r\n        <Board calculateWinner={calculateWinner} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlayGround;\r\n","import PlayGround from \"./components/PlayGround\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport firebase from 'firebase/app';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB46Mwg0lYMJ4BPeCPI0YHSEZcUw4gCL74\",\r\n  authDomain: \"tic-tac-toe-90fde.firebaseapp.com\",\r\n  projectId: \"tic-tac-toe-90fde\",\r\n  storageBucket: \"tic-tac-toe-90fde.appspot.com\",\r\n  messagingSenderId: \"233177048347\",\r\n  appId: \"1:233177048347:web:7011c493f11eee6b0b9fbe\",\r\n  measurementId: \"G-ELV1LSX31C\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Router>\r\n\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <PlayGround/>\r\n          </Route>\r\n          <Route path=\"/3x3\" exact>\r\n            <PlayGround/>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}